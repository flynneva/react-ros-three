{"version":3,"sources":["webpack:///../src/components/examples/ViewDemo.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Viewer","Grid","ROS","height","background","cellSize","planeCellCount","centerLineColor","color","isMDXComponent"],"mappings":"kiBAUO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,+NACA,6OAEA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qMAAkNC,SAAO,GAC1PJ,QACAH,kBACAQ,eACAC,WACAC,SACAC,SAN0P,gBAO1PX,IAP0P,EAQ1PH,eAR0P,GASzPO,QAAQ,cACb,YAAC,IAAD,CAAKA,QAAQ,OACX,YAAC,IAAD,CAAQQ,OAAO,QAAQC,WAAW,QAAQT,QAAQ,UAChD,YAAC,IAAD,CAAMU,SAAS,IAAIC,eAAe,KAAKC,gBAAgB,UAAUC,MAAM,UAAUb,QAAQ,kB,oNAQ/FH,EAAWiB,gBAAiB","file":"component---src-components-examples-view-demo-mdx-a7179c2cc1f1d415748c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/flynn/code/web/ros/react-ros-three/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Viewer } from '../Viewer';\nimport { Grid } from '../Grid';\nimport { ROS } from 'react-ros';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <p>{`The top level component for all your vizualization tools will be the Viewer window. Within this 3D view you can add or remove whatever visualization you'd like...or add your own custom 3D component!`}</p>\n    <p>{`Basic properties can be passed in as normal React props such as height and width. Other properties specific to three.js can also be passed in like camera where the user can specify the field of view and position.`}</p>\n\n    <Playground __position={0} __code={'<ROS>\\n  <Viewer height=\\\"500px\\\" background=\\\"black\\\">\\n    <Grid\\n      cellSize=\\\"1\\\"\\n      planeCellCount=\\\"10\\\"\\n      centerLineColor=\\\"#ffffff\\\"\\n      color=\\\"#eeeeee\\\"\\n    />\\n  </Viewer>\\n</ROS>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Viewer,\n      Grid,\n      ROS,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ROS mdxType=\"ROS\">\n    <Viewer height=\"500px\" background=\"black\" mdxType=\"Viewer\">\n      <Grid cellSize='1' planeCellCount='10' centerLineColor='#ffffff' color='#eeeeee' mdxType=\"Grid\" />\n    </Viewer>\n  </ROS>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}